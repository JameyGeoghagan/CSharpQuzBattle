@model CSharpQuizBattle.Models.GameViewModel

<div id="background-animation"></div>
<div class="battle-container">
    <div class="enemy-container">
        <img src="~/images/avatars/avataaars (4).png" alt="Enemy Avatar" class="avatar" />
        <h2>@Model.Enemy.Name (Enemy)</h2>
        <div class="health-bar">
            <div class="health" style="width: @Model.Enemy.Health%;"></div>
        </div>
    </div>

    <div class="question-container">
        <h2>@Model.CurrentQuestion.Text</h2>
        <div class="answers @ViewBag.AnswerFeedback">
            <form asp-action="Answer" method="post">
                @for (int i = 0; i < Model.CurrentQuestion.Choices.Length; i++)
                {
                    <div>
                        <input type="radio" id="choice-@i" name="selectedAnswer" value="@i" required>
                        <label for="choice-@i">@Model.CurrentQuestion.Choices[i]</label>
                    </div>
                }
                <button type="submit" class="btn btn-primary">Submit Answer</button>
            </form>
        </div>
    </div>

    <div class="player-container">
        <img src="~/images/avatars/@Model.Player.Avatar" alt="Player Avatar" class="avatar" />
        <h2>@Model.Player.Name (Player)</h2>
        <div class="health-bar">
            <div class="health" style="width: @Model.Player.Health%;"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var answerContainer = document.querySelector('.answers');
            var feedbackClass = '@ViewBag.AnswerFeedback';

            if (feedbackClass) {
                setTimeout(function () {
                    answerContainer.classList.add(feedbackClass);
                }, 100); // Delay slightly to ensure visibility
            }
        });
    </script>
}
